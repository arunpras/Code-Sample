#!/usr/bin/env bash
set -eo pipefail

# Authors:
#   - Arun Manoharan (arun@primediscoveries.com)
# Last Updated June 2019 by Arun Manoharan

# This script predicts metagenomes using picrust1 based on the ASV sequences in
# a set of samples. The KO metagenome prediction table can be used in
# downstream scripts to produce report visualizations.
#
# The input to this script should be a directory generated by merge_samples.py.
# This script is not intended to be run on single samples at a time prior to
# merging.
#
# The script uses q2-vsearch to perform closed-reference OTU picking of ASV
# representative sequences against Greengenes reference sequences. The
# resulting closed-reference OTU table is normalized by copy number and
# KO metagenomes are predicted using picrust1.
#
# Note: Greengenes 13_8 reference sequences MUST be used with the REF_SEQS
# option (Greengenes 13_5 is also okay because they're the same sequences).
# Download the Greengenes reference sequences here:
#
# ftp://greengenes.microbio.me/greengenes_release/gg_13_5/gg_13_8_otus.tar.gz
#
# Next, import the sequences into a qiime2 .qza file. For example, to import
# the Greengenes 97% OTU sequences (97% OTUs are recommended in the picrust1
# docs unless the sample is poorly characterized):
#
# qiime tools import --input-path gg_13_8_otus/rep_set/97_otus.fasta --output-path gg-13-8-97-rep-set.qza --type FeatureData[Sequence]
#
# Important: if samples are from poorly characterized environments (e.g.
# environmental samples, especially marine environments), please be sure to
# inspect the weighted NSTI values output by this script to assess the accuracy
# of picrust1 predictions. It's also a good idea to assess how many total
# sequences survive closed-reference OTU picking, as losing a majority of
# sequences can have a major effect on accuracy. See the following docs for
# more details about picrust1 QC:
#
# http://picrust.github.io/picrust/tutorials/quality_control.html

# Requirements:
#
# - MERGED_DIR must contain the output generated by merge_samples.py.
#
# - MERGED_DIR must contain ASVs generated from 16S data.

# Program requirements:
#     qiime2-2019.4 and picrust1 conda environments (use install/create_conda_envs.sh to create them)

# Script options:
#     --merged_dir MERGED_DIR: path to directory generated by merge_samples.py [REQUIRED]
#     --ref_seqs REF_SEQS: path to Greengenes 13_8 reference sequences in .qza format [REQUIRED]
#     --perc_identity PERC_IDENTITY: percent identity to perform closed-reference OTU picking at with q2-vsearch. This should be a number between 0-1 (e.g. 0.97 indicates 97% OTUs). Typically this value should match the percent identity of the Greengenes reference sequences supplied via --ref_seqs [REQUIRED]
#     --threads THREADS: number of threads to use for parallel processes [default: 8]
#     --qiime2_env QIIME2_ENV: qiime2 conda environment name [default: 'qiime2-2019.4']
#     --picrust1_env PICRUST1_ENV: picrust1 conda environment name [default: 'picrust1']

# Outputs:
#     ${MERGED_DIR}/picrust_predictions/
#         picrust_predictions.log: log of commands started and completed during running of this script
#         closed_ref_otus: directory containing closed-reference OTU picking results from q2-vsearch
#         ko_metagenomes.biom: table of predicted KO metagenomes for each sample
#         ko_metagenomes_nsti.tsv: weighted NSTI values for each sample (used to assess prediction accuracy)

# Example usage:
#     bash picrust_predictions.sh
#         --merged_dir merged_samples
#         --ref_seqs gg-13-8-97-rep-set.qza
#         --perc_identity 0.97

# TODO
#
# - Implement a cutoff threshold for the number of sequences that must survive
#   closed-reference OTU picking, and for max NSTI value that can be observed
#   in a sample? Or perhaps this info can be stored in sample_qc_stats.py if we
#   can't come up with hard cutoff thresholds. This will become more important
#   when dealing with non-human associated habitats (e.g. environmental samples
#   that are poorly characterized in the reference database).

MERGED_DIR=""
REF_SEQS=""
PERC_IDENTITY=""
THREADS="8"
QIIME2_ENV="qiime2-2019.4"
PICRUST1_ENV="picrust1"

# https://stackoverflow.com/a/14203146/3776794
while [[ $# -gt 0 ]]; do
    key="${1}"

    case "${key}" in
        --merged_dir)
            MERGED_DIR="${2}"
            shift 2
            ;;
        --ref_seqs)
            REF_SEQS="${2}"
            shift 2
            ;;
        --perc_identity)
            PERC_IDENTITY="${2}"
            shift 2
            ;;
        --threads)
            THREADS="${2}"
            shift 2
            ;;
        --qiime2_env)
            QIIME2_ENV="${2}"
            shift 2
            ;;
        --picrust1_env)
            PICRUST1_ENV="${2}"
            shift 2
            ;;
        *)
            echo "Error: Unknown option '${key}'. Please see script header for usage instructions."
            exit 1
            ;;
    esac
done

if [ -z "${MERGED_DIR}" ]; then
    echo "Error: --merged_dir is a required option."
    exit 1
fi

if [ -z "${REF_SEQS}" ]; then
    echo "Error: --ref_seqs is a required option."
    exit 1
fi

if [ -z "${PERC_IDENTITY}" ]; then
    echo "Error: --perc_identity is a required option."
    exit 1
fi

OUTPUT_DIR="${MERGED_DIR}/picrust_predictions"

if [ -d "${OUTPUT_DIR}" ]; then
  echo "Error: ${OUTPUT_DIR} directory already exists. Please either remove the directory and rerun this script or specify a different --merged_dir."
  exit 1
fi

mkdir -p ${OUTPUT_DIR}

# Writes message with timestamp to log file and also displays on stdout. Will
# create log file if it doesn't already exist.
function log_message {
    set -eo pipefail

    MSG="${1}"
    SCRIPT_LOG="${OUTPUT_DIR}/picrust_predictions.log"

    if [ ! -f "${SCRIPT_LOG}" ]; then
        echo -e "picrust_predictions.sh log file\n" > "${SCRIPT_LOG}"
    fi

    echo "$(date +%Y-%m-%d:%H:%M:%S) ${MSG}" | tee -a "${SCRIPT_LOG}"
}

# Save pipeline start timestamp for writing to pipeline_completed.log file at
# end of script.
PIPELINE_STARTED="$(date +%Y-%m-%d:%H:%M:%S)"
log_message "Pipeline execution started."

# export a copy of input parameters
log_message "Writing file of input parameters started."
PARAMS_LOG="${OUTPUT_DIR}/picrust_predictions_params.log"

echo "MERGED_DIR: $MERGED_DIR" > "${PARAMS_LOG}"
echo "REF_SEQS: $REF_SEQS" >> "${PARAMS_LOG}"
echo "PERC_IDENTITY: $PERC_IDENTITY" >> "${PARAMS_LOG}"
echo "THREADS: $THREADS" >> "${PARAMS_LOG}"
echo "QIIME2_ENV: $QIIME2_ENV" >> "${PARAMS_LOG}"
echo "PICRUST1_ENV: $PICRUST1_ENV" >> "${PARAMS_LOG}"

log_message "Writing file of input parameters completed."

source activate ${QIIME2_ENV}

log_message "Performing closed-reference OTU picking of ASV representative sequences against Greengenes reference sequences '${REF_SEQS}' started."

REP_SEQS_PATH="${MERGED_DIR}/asvs/rep_seqs.qza"
FEATURE_TABLE_PATH="${MERGED_DIR}/asvs/feature_table.qza"

qiime vsearch cluster-features-closed-reference \
    --i-sequences ${REP_SEQS_PATH} \
    --i-table ${FEATURE_TABLE_PATH} \
    --i-reference-sequences ${REF_SEQS} \
    --p-perc-identity ${PERC_IDENTITY} \
    --p-threads ${THREADS} \
    --output-dir ${OUTPUT_DIR}/closed_ref_otus \
    --verbose \
    2>&1 | tee -a ${OUTPUT_DIR}/q2_vsearch_cluster_features_closed_reference.log

qiime tools export \
    --input-path ${OUTPUT_DIR}/closed_ref_otus/clustered_table.qza \
    --output-path ${OUTPUT_DIR}/closed_ref_otus/clustered_table.biom \
    --output-format BIOMV210Format

log_message "Performing closed-reference OTU picking of ASV representative sequences against Greengenes reference sequences '${REF_SEQS}' completed."

# Deactivate qiime2 conda env.
conda deactivate

source activate ${PICRUST1_ENV}

log_message "Normalizing OTU table by copy number started."

normalize_by_copy_number.py \
    -i ${OUTPUT_DIR}/closed_ref_otus/clustered_table.biom \
    -o ${OUTPUT_DIR}/closed_ref_otus/normalized_clustered_table.biom \
    -g 13_5

log_message "Normalizing OTU table by copy number completed."

log_message "Predicting KO metagenomes with picrust1 started."

predict_metagenomes.py \
    -i ${OUTPUT_DIR}/closed_ref_otus/normalized_clustered_table.biom \
    -o ${OUTPUT_DIR}/ko_metagenomes.biom \
    -a ${OUTPUT_DIR}/ko_metagenomes_nsti.tsv \
    -t ko \
    -g 13_5

log_message "Predicting KO metagenomes with picrust1 completed."

# Deactivate picrust1 conda env.
conda deactivate

PIPELINE_COMPLETED="$(date +%Y-%m-%d:%H:%M:%S)"

echo "${PIPELINE_STARTED} Pipeline execution started." > "${OUTPUT_DIR}/pipeline_completed.log"
echo "${PIPELINE_COMPLETED} Pipeline execution completed." >> "${OUTPUT_DIR}/pipeline_completed.log"
log_message "Pipeline execution completed."
