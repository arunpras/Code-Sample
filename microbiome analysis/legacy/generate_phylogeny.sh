#!/usr/bin/env bash
set -eo pipefail

# Authors:
#   - Arun Manoharan (arun@primediscoveries.com)
# Created February 2019 by Arun Manoharan
# Last Updated February 2019 by Arun Manoharan

# This script generates a phylogenetic tree from ASV representative sequences.
# The tree can be used in downstream diversity analyses requiring a
# phylogenetic tree (e.g. UniFrac, Faith's PD).
#
# The phylogenetic tree is generated using SEPP (fragment-insertion), which
# inserts ASV representative sequences into a reference tree (as opposed to
# building a de novo tree). See the q2-fragment-insertion tutorial for
# examples and the benefits of this approach:
#
# https://github.com/qiime2/q2-fragment-insertion
#
# The input to this script should be a directory generated by merge_samples.py.
# This script is not intended to be run on single samples at a time prior to
# merging.
#
# In addition to generating a tree, the script also filters out ASVs from the
# input feature table and representative sequences that fail to be placed in
# the SEPP tree. This is necessary to prevent downstream errors from occurring,
# where many analyses require that every ASV in the feature table has a
# corresponding tip in the phylogenetic tree.

# TODO
#
# - Support inserting ASVs into custom reference trees. Currently uses SEPP's
#   default gg_13_8 99% OTUs alignment and tree (which are 16S only).

# Requirements:
#
# - MERGED_DIR must contain the output generated by merge_samples.py.
#
# - MERGED_DIR must contain ASVs generated from 16S data because SEPP's default
#   reference tree (gg_13_8 99% OTUs) is specific to 16S. This requirement may
#   no longer apply if custom reference trees are supported in the future.

# Program requirements:
#     qiime2-2019.4 conda environment (use install/create_conda_envs.sh to create one)

# Script options:
#     --merged_dir MERGED_DIR: path to directory generated by merge_samples.py [REQUIRED]
#     --threads THREADS: number of threads to use for parallel processes [default: 8]
#     --qiime2_env QIIME2_ENV: qiime2 conda environment name [default: 'qiime2-2019.4']

# Outputs:
#     ${MERGED_DIR}/phylogeny/sepp_default_gg_13_8_99_tree/
#         generate_phylogeny.log: log of commands started and completed during running of this script
#         1_sepp_placement: directory containing ASV representative sequences placed into reference tree using SEPP
#         2_filtered_asvs: directory containing feature table and representative sequences with ASVs that failed to be placed in the SEPP tree removed

# Example usage:
#     bash generate_phylogeny.sh
#         --merged_dir merged_samples
#         --threads 8

MERGED_DIR=""
THREADS="8"
QIIME2_ENV="qiime2-2019.4"

# https://stackoverflow.com/a/14203146/3776794
while [[ $# -gt 0 ]]; do
    key="${1}"

    case "${key}" in
        --merged_dir)
            MERGED_DIR="${2}"
            shift 2
            ;;
        --threads)
            THREADS="${2}"
            shift 2
            ;;
        --qiime2_env)
            QIIME2_ENV="${2}"
            shift 2
            ;;
        *)
            echo "Error: Unknown option '${key}'. Please see script header for usage instructions."
            exit 1
            ;;
    esac
done

if [ -z "${MERGED_DIR}" ]; then
    echo "Error: --merged_dir is a required option."
    exit 1
fi

OUTPUT_DIR="${MERGED_DIR}/phylogeny/sepp_default_gg_13_8_99_tree"

if [ -d "${OUTPUT_DIR}" ]; then
  echo "Error: ${OUTPUT_DIR} directory already exists. Please either remove the directory and rerun this script or specify a different --merged_dir."
  exit 1
fi

mkdir -p ${OUTPUT_DIR}

# Writes message with timestamp to log file and also displays on stdout. Will
# create log file if it doesn't already exist.
function log_message {
    set -eo pipefail

    MSG="${1}"
    SCRIPT_LOG="${OUTPUT_DIR}/generate_phylogeny.log"

    if [ ! -f "${SCRIPT_LOG}" ]; then
        echo -e "generate_phylogeny.sh log file\n" > "${SCRIPT_LOG}"
    fi

    echo "$(date +%Y-%m-%d:%H:%M:%S) ${MSG}" | tee -a "${SCRIPT_LOG}"
}

# Save pipeline start timestamp for writing to pipeline_completed.log file at
# end of script.
PIPELINE_STARTED="$(date +%Y-%m-%d:%H:%M:%S)"
log_message "Pipeline execution started."

# Create directories for output
log_message "Creating output directories started."

mkdir -p ${OUTPUT_DIR}/1_sepp_placement
mkdir -p ${OUTPUT_DIR}/2_filtered_asvs

log_message "Creating output directories completed."

# export a copy of input parameters
log_message "Writing file of input parameters started."
PARAMS_LOG="${OUTPUT_DIR}/generate_phylogeny_params.log"

echo "MERGED_DIR: $MERGED_DIR" > "${PARAMS_LOG}"
echo "THREADS: $THREADS" >> "${PARAMS_LOG}"
echo "QIIME2_ENV: $QIIME2_ENV" >> "${PARAMS_LOG}"

log_message "Writing file of input parameters completed."

source activate ${QIIME2_ENV}

# Generate phylogenetic tree for ASVs using SEPP (fragment-insertion).
# See q2-fragment-insertion tutorial for examples: https://github.com/qiime2/q2-fragment-insertion
log_message "Placing ASV representative sequences into SEPP default reference tree (gg_13_8 99% OTUs) started."

REP_SEQS_PATH="${MERGED_DIR}/asvs/rep_seqs.qza"

# Currently uses default gg_13_8 99% OTUs alignment and tree.
# TODO support other reference trees, e.g. Silva
qiime fragment-insertion sepp \
    --i-representative-sequences ${REP_SEQS_PATH} \
    --p-threads ${THREADS} \
    --o-tree ${OUTPUT_DIR}/1_sepp_placement/insertion_tree.qza \
    --o-placements ${OUTPUT_DIR}/1_sepp_placement/insertion_placements.qza \
    --verbose \
    2>&1 | tee -a ${OUTPUT_DIR}/q2_fragment_insertion_sepp.log

log_message "Placing ASV representative sequences into SEPP default reference tree (gg_13_8 99% OTUs) completed."

# Remove ASVs from feature table and representative sequences that weren't
# inserted into the SEPP tree (otherwise errors will occur in downstream steps
# expecting each feature in the table to have a corresponding tip in the tree).
log_message "Filtering ASV feature table and representative sequences by insertion tree tips started."

FEATURE_TABLE_PATH="${MERGED_DIR}/asvs/feature_table.qza"

qiime fragment-insertion filter-features \
    --i-table ${FEATURE_TABLE_PATH} \
    --i-tree ${OUTPUT_DIR}/1_sepp_placement/insertion_tree.qza \
    --o-filtered-table ${OUTPUT_DIR}/2_filtered_asvs/feature_table.qza \
    --o-removed-table ${OUTPUT_DIR}/2_filtered_asvs/feature_table_failed_placements.qza \
    --verbose \
    2>&1 | tee -a ${OUTPUT_DIR}/q2_fragment_insertion_filter_features.log

qiime feature-table filter-seqs \
    --i-data ${REP_SEQS_PATH} \
    --i-table ${OUTPUT_DIR}/2_filtered_asvs/feature_table.qza \
    --o-filtered-data ${OUTPUT_DIR}/2_filtered_asvs/rep_seqs.qza \
    --verbose \
    2>&1 | tee -a ${OUTPUT_DIR}/q2_feature_table_filter_seqs.log

log_message "Filtering ASV feature table and representative sequences by insertion tree tips completed."

# Deactivate qiime2 conda env.
conda deactivate

PIPELINE_COMPLETED="$(date +%Y-%m-%d:%H:%M:%S)"

echo "${PIPELINE_STARTED} Pipeline execution started." > "${OUTPUT_DIR}/pipeline_completed.log"
echo "${PIPELINE_COMPLETED} Pipeline execution completed." >> "${OUTPUT_DIR}/pipeline_completed.log"
log_message "Pipeline execution completed."
